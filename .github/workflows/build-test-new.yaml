name: Build and Test (NEW)

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description:
          Run the build with tmate debugging enabled
          (https://github.com/marketplace/actions/debugging-with-tmate)
        required: false
        default: false
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest]
        geant4-version:
          - 11.1.3
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install additional dependencies (ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ninja-build git curl libexpat-dev libxerces-c-dev
          pip install cmake

      - name: Install additional dependencies (macos)
        if: matrix.platform == 'macos-latest'
        run: |
          # TODO
          mamba env list
          mamba install -c conda-forge zlib
          mamba list

      - name: Check Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: geant4-install
          key: geant4-${{ matrix.geant4-version }}-${{ matrix.platform }}
          restore-keys: |
            geant4-${{ matrix.geant4-version }}-${{ matrix.platform }}

      - name: Build and Install Geant4
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/Geant4/geant4.git geant4 --depth 1 --branch v${{ matrix.geant4-version }}
          cmake -G Ninja -B geant4-build -S geant4
          -DCMAKE_INSTALL_PREFIX=geant4-install -DCMAKE_CXX_STANDARD=$CMAKE_CXX_STANDARD -DCMAKE_BUILD_TYPE=Release
          -DGEANT4_USE_GDML=ON
          -DGEANT4_INSTALL_EXAMPLES=OFF
          -DGEANT4_INSTALL_DATA=OFF
          -DGEANT4_BUILD_TLS_MODEL=global-dynamic
          cmake --build /tmp/geant4/build -j$(nproc) --target install
          rm -rf geant4 geant4-build

      - name: Cache Geant4 Installation
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: geant4-install
          key: geant4-${{ matrix.geant4-version }}-${{ matrix.platform }}
          restore-keys: |
            geant4-${{ matrix.geant4-version }}-${{ matrix.platform }}

      - name: Install the package
        run: pip install .[test]

      - name: Check imports
        run: |
          source geant4-install/bin/geant4.sh
          python -c "import geant4_python_application; geant4_python_application.Application()"

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if:
          ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled
          }}
        with:
          limit-access-to-actor: false

      - name: Run tests
        run: |
          source geant4-install/bin/geant4.sh
          python -m pytest -vv tests --reruns 3 --reruns-delay 30 --only-rerun "(?i)http|timeout|connection|socket|resolve"
