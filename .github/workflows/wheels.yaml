name: Wheels

on:
  workflow_dispatch:
    inputs:
      publish_to_test_pypi:
        type: boolean
        description: Publish to Test PyPI
        default: false

env:
  GEANT4_VERSION: 11.2.0
  XERCES_VERSION: 3.2.4

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  sdist:
    name: Source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist .

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*.tar.gz

  wheels:
    name:
      Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{
      matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: 38
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 311
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          - os: macos-latest
            python: 38
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 39
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 310
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 311
            platform_id: macosx_x86_64

          - os: macos-latest
            python: 38
            platform_id: macosx_arm64
          - os: macos-latest
            python: 39
            platform_id: macosx_arm64
          - os: macos-latest
            python: 310
            platform_id: macosx_arm64
          - os: macos-latest
            python: 311
            platform_id: macosx_arm64

    steps:
      - uses: actions/checkout@v4

      - uses: lukka/get-cmake@v3.27.9

      - name: Setup Python
        uses: actions/setup-python@v5

      - uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_TEST_COMMAND:
            python -m pytest {project}/tests -vv --reruns 3 --reruns-delay 30
            --only-rerun "(?i)http|timeout|connection|socket|resolve"
          CIBW_ENVIRONMENT: >
            SKLEARN_SKIP_NETWORK_TESTS=1 SKLEARN_BUILD_PARALLEL=3
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ARCHS: all
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_TEST_SKIP: "*-macosx_arm64" # test on arm64 is not supported yet
          CIBW_BEFORE_ALL_LINUX: |
            python3 -m pip install cmake ninja
            git clone https://github.com/apache/xerces-c.git /tmp/xerces
            git -C /tmp/xerces checkout tags/v${{ env.XERCES_VERSION }}
            cmake -G Ninja -B /tmp/xerces/build -S /tmp/xerces -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -Dnetwork-accessor=socket -Dtranscoder=iconv -DCMAKE_CXX_FLAGS=-fPIC -DCMAKE_C_FLAGS=-fPIC
            cmake --build /tmp/xerces/build --parallel $(nproc) --target install > /dev/null 2>&1
            rm -rf /tmp/xerces
            git clone https://github.com/Geant4/geant4.git /tmp/geant4 --branch=v${{ env.GEANT4_VERSION }} --depth=1
            cmake -G Ninja -B /tmp/geant4/build -S /tmp/geant4 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=Release -DGEANT4_USE_GDML=ON -DGEANT4_INSTALL_EXAMPLES=OFF -DGEANT4_INSTALL_DATA=OFF -DGEANT4_BUILD_TLS_MODEL=global-dynamic -DCMAKE_CXX_FLAGS=-fPIC -DCMAKE_C_FLAGS=-fPIC -DGEANT4_USE_SYSTEM_EXPAT=OFF -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF
            cmake --build /tmp/geant4/build --parallel $(nproc) --target install > /dev/null 2>&1
            rm -rf /tmp/geant4
          CIBW_ENVIRONMENT_MACOS: >
            MACOSX_DEPLOYMENT_TARGET=10.15 ${{ matrix.platform_id ==
            'macosx_arm64' && 'SKIP_PYBIND11_STUBGEN=1' || '' }}
          CIBW_BEFORE_ALL_MACOS: |
            python3 -m pip install cmake ninja
            git clone https://github.com/apache/xerces-c.git /tmp/xerces
            git -C /tmp/xerces checkout tags/v${{ env.XERCES_VERSION }}
            cmake -G Ninja -B /tmp/xerces/build -S /tmp/xerces -DCMAKE_OSX_ARCHITECTURES=${{ matrix.platform_id == 'macosx_x86_64' && 'x86_64' || 'arm64' }} -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -Dnetwork-accessor=socket -Dtranscoder=iconv -DCMAKE_CXX_FLAGS=-fPIC -DCMAKE_C_FLAGS=-fPIC
            cmake --build /tmp/xerces/build --parallel $(nproc) --target install > /dev/null 2>&1
            rm -rf /tmp/xerces
            git clone https://github.com/Geant4/geant4.git /tmp/geant4 --branch=v${{ env.GEANT4_VERSION }} --depth=1
            cmake -G Ninja -B /tmp/geant4/build -S /tmp/geant4 -DCMAKE_OSX_ARCHITECTURES=${{ matrix.platform_id == 'macosx_x86_64' && 'x86_64' || 'arm64' }} -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=Release -DGEANT4_USE_GDML=ON -DGEANT4_INSTALL_EXAMPLES=OFF -DGEANT4_INSTALL_DATA=OFF -DGEANT4_BUILD_TLS_MODEL=global-dynamic -DCMAKE_CXX_FLAGS=-fPIC -DCMAKE_C_FLAGS=-fPIC -DGEANT4_USE_SYSTEM_EXPAT=OFF -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF
            cmake --build /tmp/geant4/build --parallel $(nproc) --target install > /dev/null 2>&1
            rm -rf /tmp/geant4
      - name: Upload Wheels
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: wheelhouse/*.whl

  upload-test-pypi:
    name: Upload wheels to Test PyPI
    needs: [sdist, wheels]
    runs-on: ubuntu-latest
    if: github.event.inputs.publish_to_test_pypi

    steps:
      - uses: actions/setup-python@v4
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  upload-pypi:
    name: Upload wheels to PyPI
    needs: [sdist, wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/setup-python@v4
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
