name: Build and Test

on:
  schedule:
    - cron: 0 */24 * * *
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description:
          Run the build with tmate debugging enabled
          (https://github.com/marketplace/actions/debugging-with-tmate)
        required: false
        default: false
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-geant4:
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        geant4-version:
          - 11.1.3

    steps:
      - name: Install additional dependencies (ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git curl libexpat-dev libxerces-c-dev
          pip install cmake

      - name: Check Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/geant4
          key: geant4-${{ matrix.geant4-version }}-${{ matrix.platform }}
          restore-keys: |
            geant4-${{ matrix.geant4-version }}-${{ matrix.platform }}

      - name: Build and Install Geant4 (without data)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/Geant4/geant4.git ${{ github.workspace }}/geant4-source --depth 1 --branch v${{ matrix.geant4-version }}
          mkdir -p ${{ github.workspace }}/geant4-source/build mkdir -p ${{ github.workspace }}/geant4
          cd ${{ github.workspace }}/geant4-source/build
          cmake .. -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/geant4 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=Release -DGEANT4_USE_GDML=ON -DGEANT4_INSTALL_EXAMPLES=OFF -DGEANT4_INSTALL_DATA=OFF -DGEANT4_BUILD_TLS_MODEL=global-dynamic
          make install -j$(nproc)
          rm -rf ${{ github.workspace }}/geant4-source
          source ${{ github.workspace }}/geant4/bin/geant4.sh
          geant4-config --version

      - name: Cache Geant4 Installation
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/geant4
          key: geant4-${{ matrix.geant4-version }}-${{ matrix.platform }}
          restore-keys: |
            geant4-${{ matrix.geant4-version }}-${{ matrix.platform }}

      - name: Check after cache
        run: |
          ls -l ${{ github.workspace }}/geant4
          source ${{ github.workspace }}/geant4/bin/geant4.sh
          geant4-config --version
          geant4-config --prefix
          geant4-config --datasets

      - name: Check Cache
        id: cache-geant4-data
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/geant4/share/Geant4/data
          key: geant4-${{ matrix.geant4-version }}-data
          restore-keys: |
            geant4-${{ matrix.geant4-version }}-data

      - name: Install Geant4 data
        if: steps.cache-geant4-data.outputs.cache-hit != 'true'
        run: |
          source ${{ github.workspace }}/geant4/bin/geant4.sh
          geant4-config --install-datasets
          geant4-config --check-datasets

      - name: Cache Geant4 data
        if: steps.cache-geant4-data.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/geant4/share/Geant4/data
          key: geant4-${{ matrix.geant4-version }}-data
          restore-keys: |
            geant4-${{ matrix.geant4-version }}-data
          enableCrossOsArchive: true

  build-test:
    needs: [build-geant4]
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest]
        geant4-version:
          - 11.1.3
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - name: Get conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: Install Geant4 via conda
        run: |
          mamba env list
          mamba install -c conda-forge geant4=${{ matrix.geant4-version }}
          mamba list

      - name: Install additional dependencies (ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y mesa-common-dev libglu1-mesa-dev python3-dev

      - name: Install additional dependencies (macos)
        if: matrix.platform == 'macos-latest'
        run: |
          mamba env list
          mamba install -c conda-forge zlib
          mamba list

      - name: pip install the package
        run: |
          export CMAKE_PREFIX_PATH=${CONDA_PREFIX}
          mamba env list
          mamba list
          pip install .[test]

      - name: Check imports
        run: |
          python -c "import geant4_python_application; geant4_python_application.Application()"

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if:
          ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled
          }}
        with:
          limit-access-to-actor: false

      - name: Run tests
        run: |
          python -m pytest -vv tests --reruns 3 --reruns-delay 30 --only-rerun "(?i)http|timeout|connection|socket|resolve"
